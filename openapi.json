{"openapi":"3.1.0","info":{"title":"Email Service API","description":"API for sending emails with JWT authentication","version":"1.0.0"},"paths":{"/auth/token":{"post":{"summary":"Create Access Token","description":"Generate a JWT token for authentication.\n\n**Status Codes:**\n- **200**: Token generated successfully\n- **401**: Invalid credentials (wrong username/password)\n- **422**: Validation error (missing or malformed fields)\n\n- **username**: Username (cnx_test)\n- **password**: Password (cnx_password_2025!)\n\nReturns a JWT token valid for 30 minutes.","operationId":"create_access_token_auth_token_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/TokenRequest"}}},"required":true},"responses":{"200":{"description":"Token generated successfully","content":{"application/json":{"schema":{},"example":{"access_token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","token_type":"bearer","expires_in":1800}}}},"401":{"description":"Invalid credentials","content":{"application/json":{"example":{"detail":"Invalid credentials"}}}},"422":{"description":"Validation error","content":{"application/json":{"example":{"detail":[{"type":"missing","loc":["body","username"],"msg":"Field required"}]}}}}}}},"/send-email":{"post":{"summary":"Send Email","description":"Send an email using the sending API.\n\n**Status Codes:**\n- **202**: Email accepted for sending\n- **400**: Invalid payload (malformed email, missing fields)\n- **401**: Missing or invalid authentication token\n- **429**: Rate limit exceeded (too many requests)\n- **500**: Internal server error\n- **502**: Bad gateway (external service error)\n- **503**: Service unavailable (temporary maintenance)\n\n- **to**: Recipient email address (required, must be valid email format)\n- **subject**: Email subject (required, max 255 characters)\n- **body**: Email body (required, max 10000 characters)\n\nReturns the message ID and sending status.","operationId":"send_email_send_email_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/EmailRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"202":{"description":"Email accepted for sending","content":{"application/json":{"example":{"message_id":"msg_abc12345","status":"queued"}}}},"400":{"description":"Invalid payload","content":{"application/json":{"examples":{"invalid_email":{"summary":"Invalid email format","value":{"detail":"Invalid email address format"}},"empty_subject":{"summary":"Empty subject","value":{"detail":"Subject cannot be empty"}},"subject_too_long":{"summary":"Subject too long","value":{"detail":"Subject exceeds maximum length of 255 characters"}},"empty_body":{"summary":"Empty body","value":{"detail":"Email body cannot be empty"}},"body_too_long":{"summary":"Body too long","value":{"detail":"Email body exceeds maximum length of 10000 characters"}}}}}},"401":{"description":"Missing or invalid token","content":{"application/json":{"example":{"detail":"Invalid token"}}}},"429":{"description":"Rate limit exceeded","headers":{"Retry-After":{"description":"Seconds to wait before retrying","schema":{"type":"string","example":"10"}}},"content":{"application/json":{"example":{"detail":"Rate limit exceeded. Maximum 1 request per 10 seconds."}}}},"500":{"description":"Internal server error","content":{"application/json":{"example":{"detail":"Internal server error occurred while processing email"}}}},"502":{"description":"Bad gateway","content":{"application/json":{"example":{"detail":"Bad gateway - external email service unavailable"}}}},"503":{"description":"Service unavailable","content":{"application/json":{"example":{"detail":"Service temporarily unavailable for maintenance"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}},"security":[{"HTTPBearer":[]}]}},"/health":{"get":{"summary":"Health Check","description":"Health check endpoint for API monitoring.\n\nReturns the current API status, timestamp and version.","operationId":"health_check_health_get","responses":{"200":{"description":"API is healthy","content":{"application/json":{"schema":{},"example":{"status":"healthy","timestamp":"2024-01-15T10:30:00.000Z","version":"1.0.0"}}}}}}}},"components":{"schemas":{"EmailRequest":{"properties":{"to":{"type":"string","format":"email","title":"To"},"subject":{"type":"string","title":"Subject"},"body":{"type":"string","title":"Body"}},"type":"object","required":["to","subject","body"],"title":"EmailRequest"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"TokenRequest":{"properties":{"username":{"type":"string","title":"Username"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username","password"],"title":"TokenRequest"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}},"securitySchemes":{"HTTPBearer":{"type":"http","scheme":"bearer"}}}}